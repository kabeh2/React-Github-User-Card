{"version":3,"sources":["services/httpServices.js","components/user_profile/UserProfileCard.js","components/user_profile/FilterFollowers.js","components/user_profile/UserFollowers.js","components/user_profile/UserProfile.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["axios","interceptors","response","use","error","status","console","log","toast","Promise","reject","get","post","put","delete","UserProfileCard","user","className","Image","src","avatar_url","size","circular","Header","as","icon","textAlign","Content","login","href","html_url","target","rel","Button","animated","visible","hidden","Icon","name","public_repos","followers","following","bio","FilterFollowers","query","handleChange","Input","iconPosition","placeholder","value","onChange","UserFollowers","filteredList","filter","item","toLowerCase","indexOf","map","follower","Card","key","id","wrapped","ui","extra","UserProfile","useState","setQuery","e","inputQuery","Navbar","handleSubmit","searchQuery","onSubmit","App","props","componentDidMount","handleApiSubmit","fetchUser","a","http","state","apiUrl","data","setState","userParam","fetchFollowers","results","preventDefault","config","this","username","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a664456.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n  if (!expectedError) {\n    console.log(\"logging the error\", error);\n\n    toast.error(\"An unexpected error occurred\");\n  }\n\n  return Promise.reject(error);\n});\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete\n};\n","import React from \"react\";\nimport { Icon, Image, Header, Button } from \"semantic-ui-react\";\n\nconst UserProfileCard = ({ user }) => {\n  return (\n    <div className=\"card_profile\">\n      <div className=\"profile-container\">\n        <div className=\"profile_content--container\">\n          <div className=\"profile_img--container\">\n            <Image src={user.avatar_url} size=\"small\" circular />\n          </div>\n\n          <div className=\"profile_info--container\">\n            <div className=\"profile_info--title\">\n              <Header as=\"h2\" icon textAlign=\"left\">\n                <Header.Content>{user.login}</Header.Content>\n              </Header>\n              <a href={user.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <Button animated>\n                  <Button.Content visible>Go to Profile</Button.Content>\n                  <Button.Content hidden>\n                    <Icon name=\"arrow right\" />\n                  </Button.Content>\n                </Button>\n              </a>\n            </div>\n            <div className=\"profile_info--stats\">\n              <div className=\"profile-stats\">\n                <p>\n                  {`${user.public_repos} `}{\" \"}\n                  <span className=\"profile-stats--end\">repos</span>\n                </p>\n              </div>\n              <div className=\"profile-stats\">\n                <p>\n                  {`${user.followers} `}{\" \"}\n                  <span className=\"profile-stats--end\">followers</span>\n                </p>\n              </div>\n              <div className=\"profile-stats\">\n                <p>\n                  {`${user.following} `}{\" \"}\n                  <span className=\"profile-stats--end\">following</span>\n                </p>\n              </div>\n            </div>\n            <div className=\"profile-bio\">\n              <p>{user.bio}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserProfileCard;\n","import React from \"react\";\nimport { Input } from \"semantic-ui-react\";\n\nconst FilterFollowers = ({ query, handleChange }) => {\n  return (\n    <Input\n      icon=\"users\"\n      iconPosition=\"left\"\n      placeholder=\"Filter followers...\"\n      value={query}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default FilterFollowers;\n","import React from \"react\";\nimport FilterFollowers from \"./FilterFollowers\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\n\nconst UserFollowers = ({ user, query, handleChange, followers }) => {\n  let filteredList = followers.filter(item => {\n    return item.login.toLowerCase().indexOf(query.toLowerCase()) !== -1;\n  });\n\n  return (\n    <div className=\"card_followers\">\n      <div className=\"card_followers--header\">\n        <h1>{`${user.login} Followers`}</h1>\n        <FilterFollowers query={query} handleChange={handleChange} />\n      </div>\n\n      <div className=\"card_followers--container\">\n        {/* FILTER SEARCH */}\n        {filteredList.map(follower => (\n          <Card key={follower.id}>\n            <Image src={follower.avatar_url} wrapped ui={false} />\n            <Card.Content>\n              <Card.Header>{follower.login}</Card.Header>\n            </Card.Content>\n            <Card.Content extra>\n              <a\n                href={follower.html_url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <p>\n                  <Icon name=\"code\" />\n                  Go to Profile Page\n                </p>\n              </a>\n            </Card.Content>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default UserFollowers;\n","import React, { useState } from \"react\";\nimport UserProfileCard from \"./UserProfileCard\";\nimport UserFollowers from \"./UserFollowers\";\n\nconst UserProfile = ({ user, followers }) => {\n  const [query, setQuery] = useState(\"\");\n\n  const handleChange = e => {\n    const inputQuery = e.target.value;\n\n    setQuery(inputQuery);\n  };\n\n  return (\n    <div className=\"card_container\">\n      <UserProfileCard user={user} />\n      <UserFollowers\n        user={user}\n        followers={followers}\n        handleChange={handleChange}\n        query={query}\n      />\n    </div>\n  );\n};\n\nexport default UserProfile;\n","import React from \"react\";\nimport { Input, Icon, Header } from \"semantic-ui-react\";\n\nconst Navbar = ({ handleSubmit, handleChange, searchQuery }) => {\n  return (\n    <div className=\"nav-container\">\n      <div className=\"nav_content--container\">\n        <div className=\"nav_title\">\n          <Icon name=\"github\" size=\"big\" />\n          <Header as=\"h1\">React Github User Search</Header>\n        </div>\n        <form onSubmit={handleSubmit}>\n          <Input\n            icon=\"search\"\n            iconPosition=\"left\"\n            placeholder=\"Search Other Users...\"\n            value={searchQuery}\n            onChange={handleChange}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport http from \"./services/httpServices\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport GitHubCalendar from \"react-github-calendar\";\nimport config from \"./config.json\";\nimport UserProfile from \"./components/user_profile/UserProfile\";\nimport Navbar from \"./components/Navbar\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.scss\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: [],\n      followers: [],\n      searchQuery: \"\",\n      userParam: \"kabeh2\",\n      apiUrl: config.apiUrl\n    };\n  }\n\n  componentDidMount = () => {\n    this.handleApiSubmit();\n  };\n\n  fetchUser = async () => {\n    try {\n      const response = await http.get(this.state.apiUrl);\n      const user = response.data;\n      this.setState({\n        user,\n        userParam: user.login\n      });\n    } catch (error) {\n      if (error.response && error.response.status === 404)\n        toast.error(\"This user does not exist.\");\n      console.error(\"Error Retrieving User \", error);\n      toast.error(\"Error Retrieving User \");\n    }\n  };\n\n  fetchFollowers = async () => {\n    try {\n      const results = await http.get(`${this.state.apiUrl}/followers`);\n\n      const followers = results.data;\n      this.setState({\n        followers\n      });\n    } catch (error) {\n      if (error.response && error.response.status === 404)\n        toast.error(\"This users followers do not exist.\");\n      toast.error(\"Error Retrieving User\");\n      console.error(\"Error: \", error);\n    }\n  };\n\n  handleChange = e => {\n    const searchQuery = e.target.value;\n\n    this.setState({\n      searchQuery\n    });\n  };\n\n  // Create callback function for Submitting Search form to call api\n  handleApiSubmit = () => {\n    this.setState({\n      userParam: this.state.searchQuery\n    });\n    this.fetchUser();\n    this.fetchFollowers();\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.setState(\n      {\n        apiUrl: `https://api.github.com/users/${this.state.searchQuery}`,\n        searchQuery: \"\"\n      },\n      // can place call back once state is updated\n      // placed api callback to update search results\n      this.handleApiSubmit\n    );\n    console.log(this.state.user.login);\n  };\n\n  render() {\n    const { user, followers, searchQuery } = this.state;\n\n    return (\n      <>\n        <ToastContainer />\n        <Navbar\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n          searchQuery={searchQuery}\n        />\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <UserProfile\n              user={user}\n              followers={followers}\n              handleChange={this.handleChange}\n            />\n\n            <div className=\"calendar-container\">\n              <GitHubCalendar username={this.state.userParam} />\n            </div>\n          </header>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}